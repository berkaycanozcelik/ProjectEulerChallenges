A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 Ã— 99.

Find the largest palindrome made from the product of two 3-digit numbers.


public class Challenge {
    static int larrgestPalindrome(int n)
    {
        int upper_limit = (int)Math.pow(10, n) - 1;
        int lower_limit = 1 + upper_limit / 10;

        // Initialize result
        int max_product = 0;

        for (int i = upper_limit; i >= lower_limit; i--)
        {
            for (int j = i; j >= lower_limit; j--)
            {
                // calculating product of two
                // n-digit numbers
                int product = i * j;
                if (product < max_product)
                    break;
                int number = product;
                int reverse = 0;

                // calculating reverse of product
                // to check whether it is
                // palindrome or not
                while (number != 0)
                {
                    reverse = reverse * 10 + number % 10;
                    number /= 10;
                }

                // update new product if exist and if
                // greater than previous one
                if (product == reverse && product > max_product)
                    max_product = product;
            }
        }
        return max_product;
    }

    // Driver code
    public static void main (String[] args)
    {
        int n = 3;
        System.out.print(larrgestPalindrome(n));
    }
}
